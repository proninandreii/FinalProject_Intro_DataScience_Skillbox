#Запуск в терминале по команде uvicorn API:app --reload#127.0.0.1:8000 Сервер доступен по указанному адресу#Есть 3 команды: 1-GET status в Postman выводит "I'm OK"                #2-GET version выводит описание моделиo                #3-POST predict выводит результат предсказания по заданному образцу. В postman необходимо переключиться                #на body->raw->JSON                #Образцы запросов лежат в файле test_api_predict.jsonimport dillimport pandas as pdfrom fastapi import FastAPIfrom pydantic import BaseModelapp = FastAPI()with open('final_model.pkl', 'rb') as file:    model = dill.load(file)@app.get('/status')def status():    return "I'm OK"@app.get('/version')def version():    return model['metadata']class Form(BaseModel):    session_id: str    client_id: str    visit_date: str    visit_time: str    visit_number: int    utm_source: str    utm_medium: str    utm_campaign: str    utm_adcontent: str    utm_keyword: str    device_category: str    device_os: str    device_brand: str    device_model: str    device_screen_resolution: str    device_browser: str    geo_country: str    geo_city: strclass Prediction(BaseModel):    session_id: str    event_value: float@app.post('/predict', response_model=Prediction)def predict(form: Form):    df = pd.DataFrame.from_dict([form.dict()])    y = model['model'].predict(df)    return {        'session_id': form.session_id,        'event_value': y[0]    }